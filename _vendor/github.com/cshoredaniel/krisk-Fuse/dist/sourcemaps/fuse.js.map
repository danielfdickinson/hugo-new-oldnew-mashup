{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap","webpack:///./src/index.js","webpack:///./src/bitap-search/index.js","webpack:///./src/bitap-search/bitap-search.js","webpack:///./src/bitap-search/bitap-score.js","webpack:///./src/bitap-search/bitap-matched-indices.js","webpack:///./src/bitap-search/bitap-pattern-alphabet.js","webpack:///./src/bitap-search/constants.js","webpack:///./src/extended-search/index.js","webpack:///./src/extended-search/exact-match.js","webpack:///./src/extended-search/inverse-exact-match.js","webpack:///./src/extended-search/prefix-exact-match.js","webpack:///./src/extended-search/inverse-prefix-exact-match.js","webpack:///./src/extended-search/suffix-exact-match.js","webpack:///./src/extended-search/inverse-suffix-exact-match.js","webpack:///./src/ngram-search/index.js","webpack:///./src/ngram-search/ngram.js","webpack:///./src/ngram-search/distance/index.js","webpack:///./src/ngram-search/distance/jaccard-distance.js","webpack:///./src/ngram-search/array-utils/index.js","webpack:///./src/ngram-search/array-utils/union.js","webpack:///./src/ngram-search/array-utils/intersection.js","webpack:///./src/utils.js","webpack:///./src/formatters.js"],"names":["BitapSearch","require","ExtendedSearch","NGramSearch","get","isArray","withMatches","withScore","MAX_BITS","Fuse","list","location","distance","threshold","caseSensitive","findAllMatches","minMatchCharLength","id","keys","shouldSort","getFn","sortFn","a","b","score","matchAllTokens","includeMatches","includeScore","useExtendedSearch","verbose","options","isCaseSensitive","setCollection","_processKeys","listIsStringArray","_keyWeights","_keyNames","length","i","keysLen","key","push","weightsTotal","hasOwnProperty","Error","keyName","name","keyWeight","weight","pattern","opts","limit","_log","searcher","results","_searchUsing","_computeScore","_sort","slice","_format","resultMap","len","_analyze","value","record","index","keyNames","item","j","stack","arrayIndex","pop","undefined","searchResult","searchIn","isMatch","_searchResult","matchedIndices","existingResult","output","weights","hasWeights","Object","result","scoreLen","totalWeightedScore","bestScore","Number","EPSILON","Math","min","pow","$score","sort","finalOutput","cache","JSON","stringify","indexOf","transformers","data","console","log","arguments","module","exports","bitapSearch","patternAlphabet","toLowerCase","text","bitapScore","patternLen","textLen","expectedLocation","max","currentThreshold","bestLocation","matchMask","errors","currentLocation","lastIndexOf","lastBitArr","finalScore","binMax","mask","binMin","binMid","floor","start","finish","bitArr","Array","charMatch","charAt","accuracy","proximity","abs","matchmask","end","match","exactMatch","inverseExactMatch","prefixExactMatch","inversePrefixExactMatch","suffixExactMatch","inverseSuffixExactMatch","queryfy","split","map","trim","EntendedSearch","query","_fuzzyCache","matchFound","qLen","parts","pLen","token","_search","isForPattern","search","sanitize","substr","sanitizedPattern","startsWith","endsWith","substring","ngram","jaccardDistance","NGRAM_LEN","sortedNgrams","n","pad","patternNgram","textNgram","jacardResult","create","nGrams","union","intersection","nGram1","nGram2","nGramUnion","nGramIntersection","arr1","arr2","item1","item2","INFINITY","prototype","toString","call","baseToString","isString","isNum","obj","path","_get","dotIndex","remaining","matches","indices"],"mappings":"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","file":"fuse.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"Fuse\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Fuse\"] = factory();\n\telse\n\t\troot[\"Fuse\"] = factory();\n})(this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","const BitapSearch = require('./bitap-search')\nconst ExtendedSearch = require('./extended-search')\nconst NGramSearch = require('./ngram-search')\nconst { get, isArray } = require('./utils')\nconst { withMatches, withScore } = require('./formatters')\nconst { MAX_BITS } = require('./bitap-search/constants')\n\nclass Fuse {\n  constructor(list, {\n    // Approximately where in the text is the pattern expected to be found?\n    location = 0,\n    // Determines how close the match must be to the fuzzy location (specified above).\n    // An exact letter match which is 'distance' characters away from the fuzzy location\n    // would score as a complete mismatch. A distance of '0' requires the match be at\n    // the exact location specified, a threshold of '1000' would require a perfect match\n    // to be within 800 characters of the fuzzy location to be found using a 0.8 threshold.\n    distance = 100,\n    // At what point does the match algorithm give up. A threshold of '0.0' requires a perfect match\n    // (of both letters and location), a threshold of '1.0' would match anything.\n    threshold = 0.6,\n    // Indicates whether comparisons should be case sensitive.\n    caseSensitive = false,\n    // When true, the algorithm continues searching to the end of the input even if a perfect\n    // match is found before the end of the same input.\n    findAllMatches = false,\n    // Minimum number of characters that must be matched before a result is considered a match\n    minMatchCharLength = 1,\n    // The name of the identifier property. If specified, the returned result will be a list\n    // of the items' dentifiers, otherwise it will be a list of the items.\n    id = null,\n    // List of properties that will be searched. This also supports nested properties.\n    keys = [],\n    // Whether to sort the result list, by score\n    shouldSort = true,\n    // The get function to use when fetching an object's properties.\n    // The default will search nested paths *ie foo.bar.baz*\n    getFn = get,\n    // Default sort function\n    sortFn = (a, b) => (a.score - b.score),\n    // When true, the result set will only include records that match all tokens. Will only work\n    // if `tokenize` is also true.\n    matchAllTokens = false,\n\n    includeMatches = false,\n    includeScore = false,\n\n    // Enabled extended-searching\n    useExtendedSearch = false,\n\n    // Will print to the console. Useful for debugging.\n    verbose = false\n  }) {\n    this.options = {\n      location,\n      distance,\n      threshold,\n      isCaseSensitive: caseSensitive,\n      findAllMatches,\n      minMatchCharLength,\n      id,\n      keys,\n      includeMatches,\n      includeScore,\n      shouldSort,\n      getFn,\n      sortFn,\n      verbose,\n      matchAllTokens,\n      useExtendedSearch\n    }\n\n    this.setCollection(list)\n    this._processKeys(keys)\n  }\n\n  setCollection(list) {\n    this.list = list\n    this.listIsStringArray = typeof list[0] == 'string'\n    return list\n  }\n\n  _processKeys(keys) {\n    this._keyWeights = {}\n    this._keyNames = []\n\n    // Iterate over every key\n    if (keys.length && typeof keys[0] == 'string') {\n      for (let i = 0, keysLen = keys.length; i < keysLen; i += 1) {\n        const key = keys[i]\n        this._keyWeights[key] = 1\n        this._keyNames.push(key)\n      }\n    } else {\n      let weightsTotal = 0\n\n      for (let i = 0, keysLen = keys.length; i < keysLen; i += 1) {\n        const key = keys[i]\n\n        if (!key.hasOwnProperty('name')) {\n          throw new Error('Missing \"name\" property in key object')\n        }\n\n        const keyName = key.name\n        this._keyNames.push(keyName)\n\n        if (!key.hasOwnProperty('weight')) {\n          throw new Error('Missing \"weight\" property in key object')\n        }\n\n        const keyWeight = key.weight\n        this._keyWeights[keyName] = keyWeight\n\n        if (keyWeight < 0 || keyWeight > 1) {\n          throw new Error('\"weight\" property in key must bein the range of [0, 1)')\n        }\n\n\n        weightsTotal += keyWeight\n      }\n\n      if (weightsTotal > 1) {\n        throw new Error('Total of weights cannot exceed 1')\n      }\n    }\n  }\n\n  search(pattern, opts = { limit: false }) {\n    this._log(`---------\\nSearch pattern: \"${pattern}\"`)\n\n    const { useExtendedSearch, shouldSort } = this.options\n\n    let searcher = null\n\n    if (useExtendedSearch) {\n      searcher = new ExtendedSearch(pattern, this.options)\n    } else if (pattern.length > MAX_BITS) {\n      searcher = new NGramSearch(pattern, this.options)\n    } else {\n      searcher = new BitapSearch(pattern, this.options)\n    }\n\n    // console.time('_search');\n    let results = this._searchUsing(searcher)\n    // console.timeEnd('_search');\n\n    //console.time('_computeScore');\n    this._computeScore(results)\n    //console.timeEnd('_computeScore');\n\n    if (shouldSort) {\n      this._sort(results)\n    }\n\n    if (opts.limit && typeof opts.limit === 'number') {\n      results = results.slice(0, opts.limit)\n    }\n\n    return this._format(results)\n  }\n\n  _searchUsing(searcher) {\n    const list = this.list\n    const resultMap = {}\n    const results = []\n\n    // List is Array<String>\n    if (this.listIsStringArray) {\n      // Iterate over every string in the list\n      for (let i = 0, len = list.length; i < len; i += 1) {\n        this._analyze(searcher, {\n          key: '',\n          value: list[i],\n          record: i,\n          index: i\n        }, {\n          resultMap,\n          results\n        })\n      }\n\n    } else {\n      // List is Array<Object>\n\n      const getFn = this.options.getFn\n      const keyNames = this._keyNames\n      const keysLen = keyNames.length\n\n      for (let i = 0, len = list.length; i < len; i += 1) {\n        let item = list[i]\n        // Iterate over every key (i.e, path), and fetch the value at that key\n        for (let j = 0; j < keysLen; j += 1) {\n          let key = keyNames[j]\n\n          this._analyze(searcher, {\n            key,\n            value: getFn(item, key),\n            record: item,\n            index: i\n          }, {\n            resultMap,\n            results\n          })\n        }\n      }\n    }\n\n    return results\n  }\n\n  _analyze(searcher, { key, value, record, index }, { resultMap = {}, results = [] }) {\n    // Internal search function for cleanless and speed up.\n    const { includeMatches } = this.options\n\n    // initialize stack with the first entry\n    const stack = [{ arrayIndex: -1, value, record, index }]\n\n    while (stack.length) {\n      const { arrayIndex, value, record, index } = stack.pop()\n\n      if (value === undefined || value === null) {\n        continue\n      }\n\n      if (typeof value === 'string') {\n        this._log(`\\nKey: ${key === '' ? '--' : key}`)\n        let searchResult = searcher.searchIn(value)\n\n        const { isMatch, score } = searchResult\n\n        this._log(`Full text: \"${value}\", score: ${score}`)\n\n        if (!isMatch) {\n          continue\n        }\n\n        let _searchResult = { key, arrayIndex, value, score }\n\n        if (includeMatches) {\n          _searchResult.matchedIndices = searchResult.matchedIndices\n        }\n\n        // Check if the item already exists in our results\n        let existingResult = resultMap[index]\n        if (existingResult) {\n          existingResult.output.push(_searchResult)\n        } else {\n          resultMap[index] = {\n            item: record,\n            output: [_searchResult]\n          }\n          results.push(resultMap[index])\n        }\n      } else if (isArray(value)) {\n        for (let i = 0, len = value.length; i < len; i += 1) {\n          stack.push({\n            arrayIndex: i,\n            value: value[i],\n            record,\n            index\n          })\n        }\n      }\n    }\n\n  }\n\n  _computeScore(results) {\n    this._log('\\n\\nComputing score:\\n')\n\n    const weights = this._keyWeights\n    const hasWeights = !!Object.keys(weights).length\n\n    for (let i = 0, len = results.length; i < len; i += 1) {\n      const result = results[i]\n      const output = result.output\n      const scoreLen = output.length\n\n      let totalWeightedScore = 1\n\n      let bestScore = -1\n\n      for (let j = 0; j < scoreLen; j += 1) {\n        const item = output[j]\n        const key = item.key\n        const weight = hasWeights ? weights[key] : 1\n        const score = item.score === 0 && weights && weights[key] > 0\n          ? Number.EPSILON\n          : item.score\n\n        // Keep track of the best score.. just in case\n        // Actually, we're not really using it.. but need to think of a way to incorporate this\n        bestScore = bestScore == -1 ? item.score : Math.min(bestScore, item.score)\n\n        totalWeightedScore *= Math.pow(score, weight)\n      }\n\n      result.score = totalWeightedScore\n      result.$score = bestScore\n\n      this._log(result)\n    }\n  }\n\n  _sort(results) {\n    this._log('\\n\\nSorting....')\n    results.sort(this.options.sortFn)\n  }\n\n  _format(results) {\n    const finalOutput = []\n\n    const {\n      includeMatches,\n      includeScore,\n      id,\n      getFn,\n      verbose\n    } = this.options\n\n    if (verbose) {\n      let cache = []\n      this._log('\\n\\nOutput:\\n\\n', JSON.stringify(results, (key, value) => {\n        if (typeof value === 'object' && value !== null) {\n          if (cache.indexOf(value) !== -1) {\n            // Circular reference found, discard key\n            return\n          }\n          // Store value in our collection\n          cache.push(value)\n        }\n        return value\n      }, 2))\n      cache = null\n    }\n\n    let transformers = []\n\n    if (includeMatches) transformers.push(withMatches)\n    if (includeScore) transformers.push(withScore)\n\n    for (let i = 0, len = results.length; i < len; i += 1) {\n      const result = results[i]\n\n      if (id) {\n        result.item = getFn(result.item, id)[0]\n      }\n\n      if (!transformers.length) {\n        finalOutput.push(result.item)\n        continue\n      }\n\n      const data = {\n        item: result.item\n      }\n\n      for (let j = 0, len = transformers.length; j < len; j += 1) {\n        transformers[j](result, data)\n      }\n\n      finalOutput.push(data)\n    }\n\n    return finalOutput\n  }\n\n  _log() {\n    if (this.options.verbose) {\n      console.log(...arguments)\n    }\n  }\n}\n\nmodule.exports = Fuse\n","const bitapSearch = require('./bitap-search')\nconst patternAlphabet = require('./bitap-pattern-alphabet')\nconst { MAX_BITS } = require('./constants')\n\nclass BitapSearch {\n  constructor(pattern, {\n    // Approximately where in the text is the pattern expected to be found?\n    location = 0,\n    // Determines how close the match must be to the fuzzy location (specified above).\n    // An exact letter match which is 'distance' characters away from the fuzzy location\n    // would score as a complete mismatch. A distance of '0' requires the match be at\n    // the exact location specified, a threshold of '1000' would require a perfect match\n    // to be within 800 characters of the fuzzy location to be found using a 0.8 threshold.\n    distance = 100,\n    // At what point does the match algorithm give up. A threshold of '0.0' requires a perfect match\n    // (of both letters and location), a threshold of '1.0' would match anything.\n    threshold = 0.6,\n    // Indicates whether comparisons should be case sensitive.\n    isCaseSensitive = false,\n    // When true, the algorithm continues searching to the end of the input even if a perfect\n    // match is found before the end of the same input.\n    findAllMatches = false,\n    // Minimum number of characters that must be matched before a result is considered a match\n    minMatchCharLength = 1,\n\n    includeMatches = false\n  }) {\n    this.options = {\n      location,\n      distance,\n      threshold,\n      isCaseSensitive,\n      findAllMatches,\n      includeMatches,\n      minMatchCharLength\n    }\n\n    if (pattern.length > MAX_BITS) {\n      throw new Error(`Pattern length exceeds max of ${MAX_BITS}.`);\n    }\n\n    this.pattern = isCaseSensitive ? pattern : pattern.toLowerCase()\n    this.patternAlphabet = patternAlphabet(this.pattern)\n  }\n\n  searchIn(text) {\n    const { isCaseSensitive, includeMatches } = this.options\n\n    if (!isCaseSensitive) {\n      text = text.toLowerCase()\n    }\n\n    // Exact match\n    if (this.pattern === text) {\n      let result = {\n        isMatch: true,\n        score: 0\n      }\n\n      if (includeMatches) {\n        result.matchedIndices = [[0, text.length - 1]]\n      }\n\n      return result\n    }\n\n    // Otherwise, use Bitap algorithm\n    const { location, distance, threshold, findAllMatches, minMatchCharLength } = this.options\n    return bitapSearch(text, this.pattern, this.patternAlphabet, {\n      location,\n      distance,\n      threshold,\n      findAllMatches,\n      minMatchCharLength,\n      includeMatches\n    })\n  }\n}\n\nmodule.exports = BitapSearch\n","const bitapScore = require('./bitap-score')\nconst matchedIndices = require('./bitap-matched-indices')\n\nmodule.exports = (text, pattern, patternAlphabet, { location = 0, distance = 100, threshold = 0.6, findAllMatches = false, minMatchCharLength = 1, includeMatches = false }) => {\n  const patternLen = pattern.length\n  // Set starting location at beginning text and initialize the alphabet.\n  const textLen = text.length\n  // Handle the case when location > text.length\n  const expectedLocation = Math.max(0, Math.min(location, textLen))\n  // Highest score beyond which we give up.\n  let currentThreshold = threshold\n  // Is there a nearby exact match? (speedup)\n  let bestLocation = text.indexOf(pattern, expectedLocation)\n\n  // a mask of the matches\n  const matchMask = []\n  for (let i = 0; i < textLen; i += 1) {\n    matchMask[i] = 0\n  }\n\n  if (bestLocation !== -1) {\n    let score = bitapScore(pattern, {\n      errors: 0,\n      currentLocation: bestLocation,\n      expectedLocation,\n      distance\n    })\n    currentThreshold = Math.min(score, currentThreshold)\n\n    // What about in the other direction? (speed up)\n    bestLocation = text.lastIndexOf(pattern, expectedLocation + patternLen)\n\n    if (bestLocation !== -1) {\n      let score = bitapScore(pattern, {\n        errors: 0,\n        currentLocation: bestLocation,\n        expectedLocation,\n        distance\n      })\n      currentThreshold = Math.min(score, currentThreshold)\n    }\n  }\n\n  // Reset the best location\n  bestLocation = -1\n\n  let lastBitArr = []\n  let finalScore = 1\n  let binMax = patternLen + textLen\n\n  const mask = 1 << (patternLen <= 31 ? patternLen - 1 : 30)\n\n  for (let i = 0; i < patternLen; i += 1) {\n    // Scan for the best match; each iteration allows for one more error.\n    // Run a binary search to determine how far from the match location we can stray\n    // at this error level.\n    let binMin = 0\n    let binMid = binMax\n\n    while (binMin < binMid) {\n      const score = bitapScore(pattern, {\n        errors: i,\n        currentLocation: expectedLocation + binMid,\n        expectedLocation,\n        distance\n      })\n\n      if (score <= currentThreshold) {\n        binMin = binMid\n      } else {\n        binMax = binMid\n      }\n\n      binMid = Math.floor((binMax - binMin) / 2 + binMin)\n    }\n\n    // Use the result from this iteration as the maximum for the next.\n    binMax = binMid\n\n    let start = Math.max(1, expectedLocation - binMid + 1)\n    let finish = findAllMatches ? textLen : Math.min(expectedLocation + binMid, textLen) + patternLen\n\n    // Initialize the bit array\n    let bitArr = Array(finish + 2)\n\n    bitArr[finish + 1] = (1 << i) - 1\n\n    for (let j = finish; j >= start; j -= 1) {\n      let currentLocation = j - 1\n      let charMatch = patternAlphabet[text.charAt(currentLocation)]\n\n      if (charMatch) {\n        matchMask[currentLocation] = 1\n      }\n\n      // First pass: exact match\n      bitArr[j] = ((bitArr[j + 1] << 1) | 1) & charMatch\n\n      // Subsequent passes: fuzzy match\n      if (i !== 0) {\n        bitArr[j] |= (((lastBitArr[j + 1] | lastBitArr[j]) << 1) | 1) | lastBitArr[j + 1]\n      }\n\n      if (bitArr[j] & mask) {\n        finalScore = bitapScore(pattern, {\n          errors: i,\n          currentLocation,\n          expectedLocation,\n          distance\n        })\n\n        // This match will almost certainly be better than any existing match.\n        // But check anyway.\n        if (finalScore <= currentThreshold) {\n          // Indeed it is\n          currentThreshold = finalScore\n          bestLocation = currentLocation\n\n          // Already passed `loc`, downhill from here on in.\n          if (bestLocation <= expectedLocation) {\n            break\n          }\n\n          // When passing `bestLocation`, don't exceed our current distance from `expectedLocation`.\n          start = Math.max(1, 2 * expectedLocation - bestLocation)\n        }\n      }\n    }\n\n    // No hope for a (better) match at greater error levels.\n    const score = bitapScore(pattern, {\n      errors: i + 1,\n      currentLocation: expectedLocation,\n      expectedLocation,\n      distance\n    })\n\n    if (score > currentThreshold) {\n      break\n    }\n\n    lastBitArr = bitArr\n  }\n\n  let result = {\n    isMatch: bestLocation >= 0,\n    // Count exact matches (those with a score of 0) to be \"almost\" exact\n    score: !finalScore ? 0.001 : finalScore,\n  }\n\n  if (includeMatches) {\n    result.matchedIndices = matchedIndices(matchMask, minMatchCharLength)\n  }\n\n  return result\n}\n","module.exports = (pattern, { errors = 0, currentLocation = 0, expectedLocation = 0, distance = 100 }) => {\n  const accuracy = errors / pattern.length\n  const proximity = Math.abs(expectedLocation - currentLocation)\n\n  if (!distance) {\n    // Dodge divide by zero error.\n    return proximity ? 1.0 : accuracy\n  }\n\n  return accuracy + (proximity / distance)\n}\n","module.exports = (matchmask = [], minMatchCharLength = 1) => {\n  let matchedIndices = []\n  let start = -1\n  let end = -1\n  let i = 0\n\n  for (let len = matchmask.length; i < len; i += 1) {\n    let match = matchmask[i]\n    if (match && start === -1) {\n      start = i\n    } else if (!match && start !== -1) {\n      end = i - 1\n      if ((end - start) + 1 >= minMatchCharLength) {\n        matchedIndices.push([start, end])\n      }\n      start = -1\n    }\n  }\n\n  // (i-1 - start) + 1 => i - start\n  if (matchmask[i - 1] && (i - start) >= minMatchCharLength) {\n    matchedIndices.push([start, i - 1]);\n  }\n\n  return matchedIndices\n}\n","module.exports = pattern => {\n  let mask = {}\n  let len = pattern.length\n\n  for (let i = 0; i < len; i += 1) {\n    mask[pattern.charAt(i)] = 0\n  }\n\n  for (let i = 0; i < len; i += 1) {\n    mask[pattern.charAt(i)] |= 1 << (len - i - 1)\n  }\n\n  return mask\n}","// Machine word size\nmodule.exports.MAX_BITS = 32","const exactMatch = require('./exact-match')\nconst inverseExactMatch = require('./inverse-exact-match')\nconst prefixExactMatch = require('./prefix-exact-match')\nconst inversePrefixExactMatch = require('./inverse-prefix-exact-match')\nconst suffixExactMatch = require('./suffix-exact-match')\nconst inverseSuffixExactMatch = require('./inverse-suffix-exact-match')\nconst BitapSearch = require('../bitap-search')\n\n// Return a 2D array representation of the query, for simpler parsing.\n// Example:\n// \"^core go$ | rb$ | py$ xy$\" => [[\"^core\", \"go$\"], [\"rb$\"], [\"py$\", \"xy$\"]]\nconst queryfy = (pattern) => pattern.split('|').map(item => item.trim().split(/ +/g))\n\n/**\n * Command-like searching\n * ======================\n *\n * Given multiple search terms delimited by spaces.e.g. `^jscript .python$ ruby !java`,\n * search in a given text.\n *\n * Search syntax:\n *\n * | Token       | Match type                 | Description                            |\n * | ----------- | -------------------------- | -------------------------------------- |\n * | `jscript`   | fuzzy-match                | Items that match `jscript`             |\n * | `'python`   | exact-match                | Items that include `python`            |\n * | `!ruby`     | inverse-exact-match        | Items that do not include `ruby`       |\n * | `^java`     | prefix-exact-match         | Items that start with `java`           |\n * | `!^earlang` | inverse-prefix-exact-match | Items that do not start with `earlang` |\n * | `.js$`      | suffix-exact-match         | Items that end with `.js`              |\n * | `!.go$`     | inverse-suffix-exact-match | Items that do not end with `.go`       |\n *\n * A single pipe character acts as an OR operator. For example, the following\n * query matches entries that start with `core` and end with either`go`, `rb`,\n * or`py`.\n *\n * ```\n * ^core go$ | rb$ | py$\n * ```\n */\nclass EntendedSearch {\n  constructor(pattern, options) {\n    const { isCaseSensitive } = options\n    this.options = options\n    this.pattern = isCaseSensitive ? pattern : pattern.toLowerCase()\n    this.query = queryfy(this.pattern)\n    // A <pattern>:<BitapSearch> key-value pair for optimizing searching\n    this._fuzzyCache = {}\n  }\n\n  searchIn(text) {\n    const query = this.query\n    text = this.options.isCaseSensitive ? text : text.toLowerCase()\n\n    let matchFound = false\n\n    for (let i = 0, qLen = query.length; i < qLen; i += 1) {\n\n      const parts = query[i]\n      let result = null\n      matchFound = true\n\n      for (let j = 0, pLen = parts.length; j < pLen; j += 1) {\n        let token = parts[j]\n        result = this._search(token, text)\n        if (!result.isMatch) {\n          // AND condition, short-circuit and move on to next part\n          matchFound = false\n          break\n        }\n      }\n\n      // OR condition, so if TRUE, return\n      if (matchFound) {\n        return result\n      }\n    }\n\n    // Nothing was matched\n    return {\n      isMatch: false,\n      score: 1\n    }\n  }\n\n  _search(pattern, text) {\n    if (exactMatch.isForPattern(pattern)) {\n      return exactMatch.match(pattern, text)\n    } else if (prefixExactMatch.isForPattern(pattern)) {\n      return prefixExactMatch.match(pattern, text)\n    } else if (inversePrefixExactMatch.isForPattern(pattern)) {\n      return inversePrefixExactMatch.match(pattern, text)\n    } else if (inverseSuffixExactMatch.isForPattern(pattern)) {\n      return inverseSuffixExactMatch.match(pattern, text)\n    } else if (suffixExactMatch.isForPattern(pattern)) {\n      return suffixExactMatch.match(pattern, text)\n    } else if (inverseExactMatch.isForPattern(pattern)) {\n      return inverseExactMatch.match(pattern, text)\n    } else {\n      let searcher = this._fuzzyCache[pattern]\n      if (!searcher) {\n        searcher = new BitapSearch(pattern, this.options)\n        this._fuzzyCache[pattern] = searcher\n      }\n      return searcher.search(text)\n    }\n  }\n}\n\nmodule.exports = EntendedSearch","// Token: 'file\n// Match type: exact-match\n// Description: Items that include `file`\n\nconst isForPattern = pattern => pattern.charAt(0) == \"'\"\n\nconst sanitize = pattern => pattern.substr(1)\n\nconst match = (pattern, text) => {\n  const sanitizedPattern = sanitize(pattern)\n  const index = text.indexOf(sanitizedPattern)\n  const isMatch = index > -1\n\n  return {\n    isMatch,\n    score: 0,\n  }\n}\n\nmodule.exports = {\n  isForPattern,\n  sanitize,\n  match\n}","// Token: !fire\n// Match type: inverse-exact-match\n// Description: Items that do not include `fire`\n\nconst isForPattern = pattern => pattern.charAt(0) == '!'\n\nconst sanitize = pattern => pattern.substr(1)\n\nconst match = (pattern, text) => {\n  const sanitizedPattern = sanitize(pattern)\n  const isMatch = text.indexOf(sanitizedPattern) === -1\n\n  return {\n    isMatch,\n    score: 0\n  }\n}\n\nmodule.exports = {\n  isForPattern,\n  sanitize,\n  match\n}","// Token: ^file\n// Match type: prefix-exact-match\n// Description: Items that start with `file`\n\nconst isForPattern = pattern => pattern.charAt(0) == '^'\n\nconst sanitize = pattern => pattern.substr(1)\n\nconst match = (pattern, text) => {\n  const sanitizedPattern = sanitize(pattern)\n  const isMatch = text.startsWith(sanitizedPattern)\n\n  return {\n    isMatch,\n    score: 0\n  }\n}\n\nmodule.exports = {\n  isForPattern,\n  sanitize,\n  match\n}","// Token: !^fire\n// Match type: inverse-prefix-exact-match\n// Description: Items that do not start with `fire`\n\nconst isForPattern = pattern => pattern.charAt(0) == '!' && pattern.charAt(1) == '^'\n\nconst sanitize = pattern => pattern.substr(2)\n\nconst match = (pattern, text) => {\n  const sanitizedPattern = sanitize(pattern)\n  const isMatch = !text.startsWith(sanitizedPattern)\n\n  return {\n    isMatch,\n    score: 0\n  }\n}\n\nmodule.exports = {\n  isForPattern,\n  sanitize,\n  match\n}","// Token: .file$\n// Match type: suffix-exact-match\n// Description: Items that end with `.file`\n\nconst isForPattern = pattern => pattern.charAt(pattern.length - 1) == '$'\n\nconst sanitize = pattern => pattern.substr(0, pattern.length - 1)\n\nconst match = (pattern, text) => {\n  const sanitizedPattern = sanitize(pattern)\n  const isMatch = text.endsWith(sanitizedPattern)\n\n  return {\n    isMatch,\n    score: 0\n  }\n}\n\nmodule.exports = {\n  isForPattern,\n  sanitize,\n  match\n}","// Token: !.file$\n// Match type: inverse-suffix-exact-match\n// Description: Items that do not end with `.file`\n\nconst isForPattern = pattern => pattern.charAt(0) == '!' && pattern.charAt(pattern.length - 1) == '$'\n\nconst sanitize = pattern => pattern.substring(1, pattern.length - 1)\n\nconst match = (pattern, text) => {\n  const sanitizedPattern = sanitize(pattern)\n  const isMatch = !text.endsWith(sanitizedPattern)\n\n  return {\n    isMatch,\n    score: 0\n  }\n}\n\nmodule.exports = {\n  isForPattern,\n  sanitize,\n  match\n}","\nconst ngram = require('./ngram')\nconst { jaccardDistance } = require('./distance')\n\nconst NGRAM_LEN = 3\n\nconst sortedNgrams = (text, n = NGRAM_LEN, pad = true) => ngram(text, n, pad).sort((a, b) => a == b ? 0 : a < b ? -1 : 1)\n\nclass NGramSearch {\n  constructor(pattern) {\n    // Create the ngram, and sort it\n    console.log(pattern)\n    this.patternNgram = sortedNgrams(pattern)\n  }\n  searchIn(text) {\n    let textNgram = sortedNgrams(text)\n    // let tverskyRsult = tverskyIndex(this.patternNgram, textNgram, { alpha: 0.5 })\n    let jacardResult = jaccardDistance(this.patternNgram, textNgram)\n\n    return {\n      score: jacardResult,\n      isMatch: jacardResult < 1\n    }\n  }\n}\n\nmodule.exports = NGramSearch","const create = (text, n = 3, pad = true) => {\n  let nGrams = []\n\n  if (text === null || text === undefined) {\n    return nGrams\n  }\n\n  text = text.toLowerCase()\n  if (pad) {\n    text = ` ${text} `\n  }\n\n  let index = text.length - n + 1\n  if (index < 1) {\n    return nGrams\n  }\n\n  while (index--) {\n    nGrams[index] = text.substr(index, n)\n  }\n\n  return nGrams\n}\n\nmodule.exports = create","module.exports = {\n  jaccardDistance: require('./jaccard-distance')\n}","const { union, intersection } = require('../array-utils')\n\nmodule.exports = (nGram1, nGram2) => {\n  let nGramUnion = union(nGram1, nGram2)\n  let nGramIntersection = intersection(nGram1, nGram2)\n\n  return 1 - nGramIntersection.length / nGramUnion.length\n}","module.exports = {\n  union: require('./union'),\n  intersection: require('./intersection')\n}","// Assumes arrays are sorted\nmodule.exports = (arr1, arr2) => {\n  let result = []\n  let i = 0\n  let j = 0\n\n  while (i < arr1.length && j < arr2.length) {\n    let item1 = arr1[i]\n    let item2 = arr2[j]\n\n    if (item1 < item2) {\n      result.push(item1)\n      i += 1\n    } else if (item2 < item1) {\n      result.push(item2)\n      j += 1\n    } else {\n      result.push(item2)\n      i += 1\n      j += 1\n    }\n  }\n\n  while (i < arr1.length) {\n    result.push(arr1[i])\n    i += 1\n  }\n\n  while (j < arr2.length) {\n    result.push(arr2[j])\n    j += 1\n  }\n\n  return result;\n}\n","// Assumes arrays are sorted\nmodule.exports = (arr1, arr2) => {\n  let result = []\n  let i = 0\n  let j = 0\n\n  while (i < arr1.length && j < arr2.length) {\n    let item1 = arr1[i]\n    let item2 = arr2[j]\n\n    if (item1 == item2) {\n      result.push(item1)\n      i += 1\n      j += 1\n    } else if (item1 < item2) {\n      i += 1\n    } else if (item1 > item2) {\n      j += 1\n    } else {\n      i += 1\n      j += 1\n    }\n  }\n\n  return result;\n}","const INFINITY = 1 / 0\n\nconst isArray = value => !Array.isArray\n  ? Object.prototype.toString.call(value) === '[object Array]'\n  : Array.isArray(value)\n\n// Adapted from:\n// https://github.com/lodash/lodash/blob/f4ca396a796435422bd4fd41fadbd225edddf175/.internal/baseToString.js\nconst baseToString = value => {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  let result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\nconst toString = value => value == null ? '' : baseToString(value);\n\nconst isString = value => typeof value === 'string'\n\nconst isNum = value => typeof value === 'number'\n\nconst get = (obj, path) => {\n  let list = []\n\n  const _get = (obj, path) => {\n    if (!path) {\n      // If there's no path left, we've gotten to the object we care about.\n      list.push(obj)\n    } else {\n      const dotIndex = path.indexOf('.')\n\n      let key = path\n      let remaining = null\n\n      if (dotIndex !== -1) {\n        key = path.slice(0, dotIndex)\n        remaining = path.slice(dotIndex + 1)\n      }\n\n      const value = obj[key]\n\n      if (value !== null && value !== undefined) {\n        if (!remaining && (isString(value) || isNum(value))) {\n          list.push(toString(value))\n        } else if (isArray(value)) {\n          // Search each item in the array.\n          for (let i = 0, len = value.length; i < len; i += 1) {\n            _get(value[i], remaining)\n          }\n        } else if (remaining) {\n          // An object. Recurse further.\n          _get(value, remaining)\n        }\n      }\n    }\n  }\n\n  _get(obj, path)\n\n  return list\n}\n\nmodule.exports = {\n  get,\n  isArray,\n  isString,\n  isNum,\n  toString\n}\n","const withMatches = (result, data) => {\n  const output = result.output\n  data.matches = []\n\n  for (let i = 0, len = output.length; i < len; i += 1) {\n    let item = output[i]\n\n    if (item.matchedIndices.length === 0) {\n      continue\n    }\n\n    let obj = {\n      indices: item.matchedIndices,\n      value: item.value\n    }\n\n    if (item.key) {\n      obj.key = item.key\n    }\n\n    if (item.hasOwnProperty('arrayIndex') && item.arrayIndex > -1) {\n      obj.arrayIndex = item.arrayIndex\n    }\n\n    data.matches.push(obj)\n  }\n}\n\nconst withScore = (result, data) => {\n  data.score = result.score\n}\n\nmodule.exports = {\n  withMatches,\n  withScore\n}"],"sourceRoot":""}